# -*- coding: utf-8 -*-
"""Final Project

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/127tcXsLGRsVuah4z4MeZOvFjLEooyvj4

Andi Cici Amalia - 1301229518

Dzakiyyah Azahra Mooduto - 1202229418
"""

# utilities
import pandas as pd
import numpy as np
from os.path import dirname, join

# bokeh
from bokeh.plotting import figure
from bokeh.models import ColumnarDataSource, HoverTool, Select,ColumnDataSource
from bokeh.layouts import Row, WidgetBox
from bokeh.palettes import Category20c_16
from bokeh.models.widgets import Tabs, Panel
from bokeh.plotting import show
from bokeh.io import curdoc
from bokeh.layouts import Column, Row, WidgetBox
from bokeh.models.widgets import CheckboxButtonGroup, Slider, RangeSlider, Tabs

# import data
df = pd.read_csv("/content/covid_19_indonesia_time_series_all.csv")

df["Date"] = pd.to_datetime(df["Date"])
data = df [['Date', 'Location', 'Total Cases', 'Total Deaths', 'Total Recovered', 'Total Active Cases']]
lokasi = list(df['Location'].unique())
col_list = list(df.columns)

#Method untuk pembuatan dataset
def createdataset(lokasi, feature):
    list_x = []
    list_y = []
    colors = []
    labels = []

    for i, lokasi in enumerate(lokasi):
        op = data[data['Location'] == lokasi].reset_index(drop = True)

        x = list(op['Date'])
        y = list(op[feature])

        list_x.append(list(x))
        list_y.append(list(y))

        colors.append(Category20c_16[i])
        labels.append(lokasi)
    
    new_index = ColumnDataSource(data={'x':list_x, 'y':list_y, 'color': colors, 'label': labels})

    return new_index

#Method untuk pembuatan multiple line plot yang akan diselect nantinya

def createplot(src, feature):
  c = figure(plot_width = 820, plot_height= 430,
              title = "Covid-19",
              x_axis_label = 'Date', y_axis_label = 'Feature Selected')
  
  c.multi_line('x', 'y', color = 'color', legend_field = 'label', line_width = 3, source = src)

  tooltips = [('Date', '$x'), ('Total', '$y')]

  c.add_tools(HoverTool(tooltips=tooltips)) #Melakukan Hoover

  return c

# Method callback untuk interaktif checkbox
def perbaruilokasi(attr, old, new):
  lokasi_plot = [lokasi_selection.labels[i] for i in lokasi_selection.active]

  feature = feature_select.value

  new_index = createdataset(lokasi_plot, feature_select.value)

  src.data.update(new_index.data)

# Method callback untuk interaktif  dropdown
def perbaruifitur(attr, old, new):
  lokasi_plot = [lokasi_selection.labels[i] for i in lokasi_selection.active]

  feature = feature_select.value

  new_index = createdataset(lokasi_plot, feature_select.value)

  src.data.update(new_index.data)

from bokeh.models.widgets.groups import CheckboxGroup
#Pembuatan checkboxgroup berdasarkan pada lokasi
lokasi_selection = CheckboxGroup(labels=lokasi, active = [0])
lokasi_selection.on_change('active', perbaruilokasi)

from pandas._config import options
#Pembuatan fitur select dropdown
feature_select = Select(options = col_list[7:], value = 'Total Cases', title = 'Feature Select')
feature_select.on_change('value', perbaruifitur)
lokasi_now = [lokasi_selection.labels[i] for i in lokasi_selection.active]
src = createdataset(lokasi_now, feature_select.value)

# Pemanggilan method plot 
c = createplot(src, feature_select.value)

# Pemasangan Widget untuk visualisasi interaktif data covid
controls = WidgetBox(feature_select, lokasi_selection)
layout = row(controls, c)
curdoc().add_root(layout)